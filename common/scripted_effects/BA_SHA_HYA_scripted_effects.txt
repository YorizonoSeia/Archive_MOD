
HYA_MINBYEONG_ADD_SCE = {
	create_unit = {
		division = "name = \"Militia\" division_template = \"Militia\" start_experience_factor = 0" 
		owner = HYA
	}
}
SHA_JIJI_CHECK = {
	if = {
		limit = {
			check_variable = { 
				var = SHA_government_jiji
				value = 100
				compare = greater_than_or_equals 
			}
		}
		set_variable = { SHA_government_jiji = 100 }
	}
	if = {
		limit = {
			check_variable = { 
				var = SHA_government_jiji
				value = 0
				compare = less_than_or_equals 
			}
		}
		set_variable = { SHA_government_jiji = 0 }
	}
}
SHA_Eastern_Alchemy_Society_idea_up = {
	if = { 
		limit = { has_idea = SHA_Eastern_Alchemy_Society_low }
		swap_ideas = {
			add_idea = SHA_Eastern_Alchemy_Society_medium
			remove_idea = SHA_Eastern_Alchemy_Society_low
		}
	}
	else_if = {
		limit = { has_idea = SHA_Eastern_Alchemy_Society_medium }
		swap_ideas = {
			add_idea = SHA_Eastern_Alchemy_Society_high
			remove_idea = SHA_Eastern_Alchemy_Society_medium
		}
	}
}
SHA_Eastern_Alchemy_Society_idea_down = {
	if = { 
		limit = { has_idea = SHA_Eastern_Alchemy_Society_high }
		swap_ideas = {
			add_idea = SHA_Eastern_Alchemy_Society_medium
			remove_idea = SHA_Eastern_Alchemy_Society_high
		}
		else_if = {
			limit = { has_idea = SHA_Eastern_Alchemy_Society_medium }
			swap_ideas = {
				add_idea = SHA_Eastern_Alchemy_Society_low
				remove_idea = SHA_Eastern_Alchemy_Society_medium
			}
		}
		else_if = {
			limit = { has_idea = SHA_Eastern_Alchemy_Society_low }
			add_timed_idea = {
				idea = SHA_Eastern_Alchemy_Society_super_low
				days = 180
			}
		}
	}
}
SHA_EAS_idea_remove = {
	custom_effect_tooltip = tooltip_white_line
	effect_tooltip = { remove_decision = SHA_remove_EAS_tooltip }
	if = {
		limit = { has_idea = SHA_Eastern_Alchemy_Society_high }
		remove_ideas = SHA_Eastern_Alchemy_Society_high
	}
	else_if = {
		limit = { has_idea = SHA_Eastern_Alchemy_Society_low }
		remove_ideas = SHA_Eastern_Alchemy_Society_low
	}
	else_if = {
		limit = { has_idea = SHA_Eastern_Alchemy_Society_medium }
		remove_ideas = SHA_Eastern_Alchemy_Society_medium
	}
}
SHA_invade_HYA_idea_down = {
	if = {
		limit = { has_idea = SHA_HYA_clarhd_idea }
		swap_ideas = {
			remove_idea = SHA_HYA_clarhd_idea
			add_idea = SHA_HYA_clarhd_idea_2
		}
	}
	else_if = {
		limit = { has_idea = SHA_HYA_clarhd_idea_2 }
		swap_ideas = {
			remove_idea = SHA_HYA_clarhd_idea_2
			add_idea = SHA_HYA_clarhd_idea_3
		}
	}
	else_if = {
		limit = { has_idea = SHA_HYA_clarhd_idea_3 }
		swap_ideas = {
			remove_idea = SHA_HYA_clarhd_idea_3
			add_idea = SHA_HYA_clarhd_idea_4
		}
	}
	else_if = {
		limit = { has_idea = SHA_HYA_clarhd_idea_4 }
		swap_ideas = {
			remove_idea = SHA_HYA_clarhd_idea_4
			add_idea = SHA_HYA_clarhd_idea_5
		}
	}
	else = { 
		army_experience = 25 
	}
}
# requires a temp variable SHA_anger_change
SHA_change_aup_anger = {
	if = {
		limit = {
			has_idea = SHA_austria_unemployment_problem
			OR = {
				check_variable = { SHA_anger_change > 0 }
				AND = {
					check_variable = { SHA_anger_change < 0 }
					check_variable = { SHA_aup_anger > 0 }
				}
			}
		}

		set_temp_variable = { SHA_anger_lower_limit = 1 }
		subtract_from_temp_variable = { SHA_anger_lower_limit = SHA_aup_anger }

		set_temp_variable = { SHA_anger_upper_limit = 10 }
		subtract_from_temp_variable = { SHA_anger_upper_limit = SHA_aup_anger }

		# avoid going < 1 or > 10
		clamp_temp_variable = {
			var = SHA_anger_change
			min = SHA_anger_lower_limit
			max = SHA_anger_upper_limit
		}

		if = {
			limit = {
				OR = {
					NOT = { has_variable = SHA_aup_anger } #bypass the check when initialising
					NOT = { check_variable = { SHA_anger_change = 0 } }
				}
			}
			if = {
				limit = { check_variable = { SHA_anger_change > 0 } }
				custom_effect_tooltip = RUS_increase_pop_anger
				log = "Popular Anger Increased"
			}
			else = {
				custom_effect_tooltip = RUS_decrease_pop_anger
				log = "Popular Anger Decreased"
			}

			# for the tooltips
			set_temp_variable = { SHA_aup_anger_pp_temp = 0.01 }
			multiply_temp_variable = { SHA_aup_anger_pp_temp = SHA_anger_change }

			set_temp_variable = { SHA_aup_anger_stability_temp = -0.03 }
			multiply_temp_variable = { SHA_aup_anger_stability_temp = SHA_anger_change }

			set_temp_variable = { SHA_aup_anger_factory_output_temp = -0.03 }
			multiply_temp_variable = { SHA_aup_anger_factory_output_temp = SHA_anger_change }

			# set the new variables
			add_to_variable = { SHA_aup_anger = SHA_anger_change }
			add_to_variable = { SHA_aup_pp = SHA_aup_anger_pp_temp }
			add_to_variable = { SHA_aup_stability = SHA_aup_anger_stability_temp }
			add_to_variable = { SHA_aup_factory_output = SHA_aup_anger_factory_output_temp }

			log = "Current anger levels: Military Anger = [?RUS_military_anger], Popular Anger = [?SHA_aup_anger], Right-Anger = [?RUS_right_anger], Left-Anger = [?RUS_left_anger]"
		}
	}
}